{"version":3,"sources":["components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","App.js","index.js"],"names":["ContactList","contacts","onDeleteContact","className","map","id","name","number","onClick","Filter","filter","changeFilter","type","value","onChange","ContactForm","state","nameInputId","shortid","generate","numberInputId","handleInputChange","event","setState","currentTarget","handleSubmit","e","preventDefault","props","onSubmit","this","htmlFor","pattern","title","required","React","Component","App","formsSubmitHandler","find","contact","toLowerCase","alert","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","normalizedFilter","visibleContacts","includes","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.4d6299e6.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ContactList.scss'\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"ContactList\">\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className=\"ContactList_Item\" key={id}>\r\n          <p className=\"ContactList_Name\">{name}</p>\r\n          <p>{number}</p>\r\n          <button onClick={() => onDeleteContact(id)}>Delete</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n}\r\n\r\nexport default ContactList\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Filter.scss'\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  return (\r\n    <label className=\"Filter_Input\">\r\n      Find contacts by name\r\n      <input type=\"text\" value={filter} onChange={changeFilter} />\r\n    </label>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\nimport shortid from 'shortid'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './ContactForm.scss'\r\n\r\nclass ContactForm extends React.Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func,\r\n  }\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  }\r\n\r\n  nameInputId = shortid.generate()\r\n  numberInputId = shortid.generate()\r\n\r\n  handleInputChange = (event) => {\r\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.onSubmit(this.state)\r\n    this.setState({ number: '', name: '' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n        <label className=\"ContactForm_Input\" htmlFor={this.nameInputId}>\r\n          Имя\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n            id={this.nameInputId}\r\n          />\r\n        </label>\r\n        <label className=\"ContactForm_Input\" htmlFor={this.numberInputId}>\r\n          Телефон\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react'\nimport shortid from 'shortid'\n\nimport ContactList from './components/ContactList/ContactList'\nimport Filter from './components/Filter/Filter'\nimport ContactForm from './components/ContactForm/ContactForm'\n\nimport './App.scss'\n\nclass App extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  }\n\n  formsSubmitHandler = ({ name, number }) => {\n    const isPresentName = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    )\n    if (isPresentName) {\n      alert(`${name} is already in contacts`)\n    } else {\n      const contact = {\n        id: shortid.generate(),\n        name,\n        number,\n      }\n\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }))\n    }\n  }\n\n  onDeleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }))\n  }\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value })\n  }\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts')\n    const parsedContacts = JSON.parse(contacts)\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts })\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n    }\n  }\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase()\n\n    const visibleContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    )\n    const { filter } = this.state\n\n    return (\n      <div className=\"AppRoot\">\n        <h1 className=\"AppTitle\">Phonebook</h1>\n        <ContactForm onSubmit={this.formsSubmitHandler} />\n\n        <h2 className=\"AppTitle\">Contacts</h2>\n        <Filter filter={filter} changeFilter={this.changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.onDeleteContact}\n        />\n      </div>\n    )\n  }\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}